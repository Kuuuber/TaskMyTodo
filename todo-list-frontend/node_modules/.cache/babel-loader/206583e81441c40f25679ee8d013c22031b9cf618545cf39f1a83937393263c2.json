{"ast":null,"code":"// action/todo.ts\n\nimport axios from 'axios';\nexport const fetchTodos = async () => {\n  try {\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}/todo`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching todos:', error);\n    throw error;\n  }\n};\nexport const addTodo = async newTodo => {\n  try {\n    await axios.post(`${process.env.REACT_APP_API_URL}/todo`, {\n      title: newTodo,\n      status: 'pending'\n    });\n  } catch (error) {\n    console.error('Error adding todo:', error);\n    throw error;\n  }\n};\nexport const deleteTodo = async id => {\n  try {\n    await axios.delete(`${process.env.REACT_APP_API_URL}/todo/${id}`);\n  } catch (error) {\n    console.error('Error deleting todo:', error);\n    throw error;\n  }\n};\nexport const updateTodoStatus = async (todoId, newStatus) => {\n  try {\n    await axios.patch(`${process.env.REACT_APP_API_URL}/todo/${todoId}/status`, {\n      status: newStatus\n    });\n  } catch (error) {\n    console.error('Error updating todo status:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","fetchTodos","response","get","process","env","REACT_APP_API_URL","data","error","console","addTodo","newTodo","post","title","status","deleteTodo","id","delete","updateTodoStatus","todoId","newStatus","patch"],"sources":["D:/WorkStudy/2023/Todolist/todo-list-frontend/src/action/todo.ts"],"sourcesContent":["// action/todo.ts\r\n\r\nimport axios from 'axios';\r\n\r\nexport const fetchTodos = async () => {\r\n  try {\r\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}/todo`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching todos:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addTodo = async (newTodo: string) => {\r\n  try {\r\n    await axios.post(`${process.env.REACT_APP_API_URL}/todo`, {\r\n      title: newTodo,\r\n      status: 'pending',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error adding todo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteTodo = async (id: number) => {\r\n  try {\r\n    await axios.delete(`${process.env.REACT_APP_API_URL}/todo/${id}`);\r\n  } catch (error) {\r\n    console.error('Error deleting todo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateTodoStatus = async (todoId: number, newStatus: string) => {\r\n  try {\r\n    await axios.patch(`${process.env.REACT_APP_API_URL}/todo/${todoId}/status`, { status: newStatus });\r\n  } catch (error) {\r\n    console.error('Error updating todo status:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,OAAM,CAAC;IACzE,OAAOJ,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,OAAO,GAAG,MAAOC,OAAe,IAAK;EAChD,IAAI;IACF,MAAMX,KAAK,CAACY,IAAI,CAAE,GAAER,OAAO,CAACC,GAAG,CAACC,iBAAkB,OAAM,EAAE;MACxDO,KAAK,EAAEF,OAAO;MACdG,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,CAAC,OAAON,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAOC,EAAU,IAAK;EAC9C,IAAI;IACF,MAAMhB,KAAK,CAACiB,MAAM,CAAE,GAAEb,OAAO,CAACC,GAAG,CAACC,iBAAkB,SAAQU,EAAG,EAAC,CAAC;EACnE,CAAC,CAAC,OAAOR,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMU,gBAAgB,GAAG,MAAAA,CAAOC,MAAc,EAAEC,SAAiB,KAAK;EAC3E,IAAI;IACF,MAAMpB,KAAK,CAACqB,KAAK,CAAE,GAAEjB,OAAO,CAACC,GAAG,CAACC,iBAAkB,SAAQa,MAAO,SAAQ,EAAE;MAAEL,MAAM,EAAEM;IAAU,CAAC,CAAC;EACpG,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}