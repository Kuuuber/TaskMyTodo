{"ast":null,"code":"import axios from 'axios';\nconst apiUrl = process.env.REACT_APP_API_URL;\nexport const fetchTodos = async () => {\n  try {\n    const response = await axios.get(`${apiUrl}/todo`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching todos:', error);\n    throw error;\n  }\n};\nexport const addTodo = async newTodo => {\n  try {\n    await axios.post(`${apiUrl}/todo`, {\n      title: newTodo,\n      status: 'pending'\n    });\n  } catch (error) {\n    console.error('Error adding todo:', error);\n    throw error;\n  }\n};\nexport const deleteTodo = async id => {\n  try {\n    await axios.delete(`${apiUrl}/todo/${id}`);\n  } catch (error) {\n    console.error('Error deleting todo:', error);\n    throw error;\n  }\n};\nexport const updateTodoStatus = async (todoId, newStatus) => {\n  try {\n    await axios.patch(`${apiUrl}/todo/${todoId}/status`, {\n      status: newStatus\n    });\n  } catch (error) {\n    console.error('Error updating todo status:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","apiUrl","process","env","REACT_APP_API_URL","fetchTodos","response","get","data","error","console","addTodo","newTodo","post","title","status","deleteTodo","id","delete","updateTodoStatus","todoId","newStatus","patch"],"sources":["D:/WorkStudy/2023/Todolist/todo-list-frontend/src/action/todo.ts"],"sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchTodos = async () => {\r\n  try {\r\n    const response = await axios.get(`${apiUrl}/todo`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching todos:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addTodo = async (newTodo: string) => {\r\n  try {\r\n    await axios.post(`${apiUrl}/todo`, {\r\n      title: newTodo,\r\n      status: 'pending',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error adding todo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteTodo = async (id: number) => {\r\n  try {\r\n    await axios.delete(`${apiUrl}/todo/${id}`);\r\n  } catch (error) {\r\n    console.error('Error deleting todo:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateTodoStatus = async (todoId: number, newStatus: string) => {\r\n  try {\r\n    await axios.patch(`${apiUrl}/todo/${todoId}/status`, { status: newStatus });\r\n  } catch (error) {\r\n    console.error('Error updating todo status:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE5C,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,GAAEN,MAAO,OAAM,CAAC;IAClD,OAAOK,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,OAAO,GAAG,MAAOC,OAAe,IAAK;EAChD,IAAI;IACF,MAAMZ,KAAK,CAACa,IAAI,CAAE,GAAEZ,MAAO,OAAM,EAAE;MACjCa,KAAK,EAAEF,OAAO;MACdG,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,CAAC,OAAON,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAOC,EAAU,IAAK;EAC9C,IAAI;IACF,MAAMjB,KAAK,CAACkB,MAAM,CAAE,GAAEjB,MAAO,SAAQgB,EAAG,EAAC,CAAC;EAC5C,CAAC,CAAC,OAAOR,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMU,gBAAgB,GAAG,MAAAA,CAAOC,MAAc,EAAEC,SAAiB,KAAK;EAC3E,IAAI;IACF,MAAMrB,KAAK,CAACsB,KAAK,CAAE,GAAErB,MAAO,SAAQmB,MAAO,SAAQ,EAAE;MAAEL,MAAM,EAAEM;IAAU,CAAC,CAAC;EAC7E,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}